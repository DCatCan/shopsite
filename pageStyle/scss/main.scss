
@import './resets';
@import './variables';
@import './functions';


.container{
    width: 100%;
    padding: 0 1rem;
    margin: 0 auto;

    @each $key, $size in $grid-breakpoints {
        @include minq($key){
            max-width: map-get($map: $container-max-widths, $key: $key);
            padding: 0 0;
        }
      
    }
    &-fluid{
        padding: 0 2em;
    }
   
}
// colors
.bg{
    &-brown{
        background-color: map-get($map: $brown_c, $key: khaki );
    }
}


// card

.card{
    border: 1px solid rgb(51, 51, 51);
    border-radius: .5rem;
}

//navbar

.navbar{
    padding: 0.5rem 0;
    > .container {
        display: flex;
        flex-wrap: inherit;
        align-items: center;
        justify-content: space-between;
    }

}




.nav{
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    margin-bottom: 0;


    &-link{
        margin: 1em 1em;
        color: black;
        text-decoration: none;
        font-size: 1.1em;
        
    }

    &-item:hover{

        
    }
}


// grid / layout
.d-flex{
    display: flex !important;

}

.flex{
    display: flex;

    &-row{
        flex-direction: row;
    }
    &-column{
        flex-direction: column;
    }
}


.row{
    display: flex;
    flex-wrap: wrap;
    > *{
        flex-shrink: 0;
        width: 100%;
        max-width: 100%;
        padding: 0 0.5rem;
    }
    

}
.col {
    flex: 0 0 (100%);

    @each $key, $s in $grid-breakpoints {
        &-#{$key}{
            
            @for $i from 1 through 12 {

                &-#{$i}{
                    
                    max-width: 100%;

                }
                
            &-auto{
                flex: 0 0 auto;
                width: auto;
            }
            
        }
            @include minq($key){
            
                @for $i from 1 through 12 {

                    &-#{$i}{
                        
                        flex: 0 0 (100% / (12/$i));

                    }
                }
            }

        }
    }

    @for $i from 1 through 12 {

        &-#{$i}{
            flex: 0 0 (100% / (12/$i));
 
        }
    }
}




// spacing and stuff
.m{
    @each $key, $var in $direction-type {
        &#{$key}{
            @for $i from 1 through 5 {
                &-#{$i}{
                    margin-#{$var}: $spacer-var*$i !important;
                }
            }

            &-auto{
                margin-#{$var}: auto !important;
                
            }
        }
        
    }
    @for $i from 1 through 5 {
        &-#{$i}{
            margin: $spacer-var*$i !important;
        }
    }
    @each $key, $one, $two in $direction-duo {
        &#{$key}{
            @for $i from 1 through 5 {
                &-#{$i}{
                    margin-#{$one}: $spacer-var*$i !important;
                    margin-#{$two}: $spacer-var*$i !important;
                }
            }
            &-auto{
                margin-#{$one}: auto !important;
                margin-#{$two}: auto !important;
            }
        }
        
    }
}

.p{
    @each $key, $var in $direction-type {
        &#{$key}{
            @for $i from 1 through 5 {
                &-#{$i}{
                    padding-#{$var}: $spacer-var*$i !important;
                }
            }
            &-auto{
                padding-#{$var}: auto !important;
                
            }
            
        }
        
    }
    @for $i from 1 through 5 {
        &-#{$i}{
            padding: $spacer-var*$i !important;
        }
    }
    @each $key, $one, $two in $direction-duo {
        &#{$key}{
            @for $i from 1 through 5 {
                &-#{$i}{
                    padding-#{$one}: $spacer-var*$i !important;
                    padding-#{$two}: $spacer-var*$i !important;
                }
            }
        }
        
    }

}


// utilities

.btn{
    display: inline-block;
    color: white;
    font-weight: 400;
    line-height: 1.5;
    text-align: center;
    text-decoration: none;
    vertical-align: middle;
    user-select: none;
    border: 1px solid transparent;
    padding: 0.375rem .75rem;
    font-size: 1rem;
    border-radius: .25rem;
    transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color 15s ease-in-out, box-shadow 15s ease-in-out ;

    &-success{
        background-color: green;
        border-color: green;

    }
    &-warning{
        background-color: #ffe083;
        border-color: #ffe083;
        color: rgb(29, 29, 29);

    }
    &-primary{
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
    &-danger{
        background-color: #fd0d0d;
        border-color: #fd0d0d;
    }
}

.justify-content{
    &-center{
        justify-content: center;
    }
    &-end{
        justify-content: end;
    }
}
img, svg{
    vertical-align: middle;

}
.img{
    &-fluid{
        
        max-width: 100%;
        height: auto;
    
        
    }

}

.text{
    @each $var in $alignment {
        &-#{$var}{
            text-align: $var;
        }
        
    }
}

.list-unstyled{
    list-style: none;
}
.lead{
    font-size: 1.25rem;
    font-weight: 300;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

p{
    margin-top: 0;
    margin-bottom: 1rem;
}
hr{
    margin: 1rem 0;
    color: inherit;
    background-color: currentColor;
    border: 0;
    opacity: .25;
    :not([size]){
        height: 1px;
    }
}
@for $index from 1 through 5 {
    h#{$index}{
        margin-top: 0;
        margin-bottom: .5rem;
        font-weight: 500;
        line-height: 1.2;
    }
    
}
.h-100{
    height: 100% !important;
}

.display{
    @for $index from 1 through 5 {
        &-#{$index}{
            font-size: calc(1.475rem + 2.7vw);
            font-weight: 300;
            line-height: 1.2;
        }
    }
    @each $key, $s in $grid-breakpoints {

        @include minq($key){
                
            @for $i from 1 through 5 {

                &-#{$i}{
                    font-size: 3.5rem;
                    font-weight: 300;
                    line-height: 1.2;

                }
            }
        }
    }
    
    
}
.list-group{
    display: flex;
    flex-direction: column;
    padding-left: 0;
    margin-bottom: 0;

    &-flush{
        border-radius: 0;

        > .list-group-item{
            border-width: 0 0 1px;
            margin-top: 6px;
        }
    }
    &-item{
        position: relative;
        display: block;
        padding: .5rem 1rem;
        color: #212529;
        text-decoration: none;
        background-color: #fff;
        border: 1px solid rgba(0,0,0,.125)

        
    }
    &-item:first-child{
        border-top-left-radius: inherit;
        border-top-right-radius: inherit;
    }


}
.position{
    &-relative{
        position: relative !important;
    }
}

.form{
    &-control{
        display: block;
        width: 100%;
        padding: 0.4rem 1rem;
        font-size: 1rem;
        font-weight: 375;
        line-height: 1.5;
        border: 1px solid;
        border-radius: 0.25rem;
    }
    

    &-upload{
        @extend .form-control;
        border: 0;
    }
    &-label{
        font-weight: 400;
        font-size: 1.2rem;
    }

}
input, button, textarea, select {
    margin: 0;
    font-family: inherit;
    appearance: none;
    resize: none;
}
textarea{
    height: 12rem;
}





